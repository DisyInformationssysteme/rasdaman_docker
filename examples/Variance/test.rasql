

rasql --user rasadmin --passwd rasadmin -q 'drop collection TestColl'
rasql --user rasadmin --passwd rasadmin -q 'create collection TestColl FloatSet3'

rasql --user rasadmin --passwd rasadmin -q 'insert into TestColl values marray it in [0:0,0:0,0:0] values 0f'


rasql --user rasadmin --passwd rasadmin -q  'update TestColl as c set c[0:999, 0:999, 1] assign marray v in [0:999, 0:999] values 1f'
rasql --user rasadmin --passwd rasadmin -q  'update TestColl as c set c[0:999, 0:999, 2] assign marray v in [0:999, 0:999] values 2f'
rasql --user rasadmin --passwd rasadmin -q  'update TestColl as c set c[0:999, 0:999, 3] assign marray v in [0:999, 0:999] values 3f'


# compute pixel-wise mean over time (result is 2 for each pixel)
#rasql --user rasadmin --passwd rasadmin -q 'select encode(marray mean in [0:999,0:999] values condense + over x in [1:3] using TestColl[mean[0], mean[1], x[0]]/3f, "GTiff") from TestColl' --out file --outfile test_mean
rasql --user rasadmin --passwd rasadmin -q 'select (marray mean in [0:999,0:999] values condense + over x in [1:3] using TestColl[mean[0], mean[1], x[0]]/3f)[1,1] from TestColl' --out string


# compute pixel-wise variance over time (result is 1 for each pixel)
rasql --user rasadmin --passwd rasadmin -q 'select encode(marray variance in [0:999,0:999] values condense + over y in [1:3] using (TestColl[variance[0], variance[1], y[0]] - avg_cells(TestColl[variance[0], variance[1], 1:3])) * (TestColl[variance[0], variance[1], y[0]] - avg_cells(TestColl[variance[0], variance[1], 1:3])) / 2f,"GTiff") from TestColl' --out file --outfile test_var

rasql --user rasadmin --passwd rasadmin -q 'select (marray variance in [0:999,0:999] values condense + over y in [1:3] using (TestColl[variance[0], variance[1], y[0]] - avg_cells(TestColl[variance[0], variance[1], 1:3])) * (TestColl[variance[0], variance[1], y[0]] - avg_cells(TestColl[variance[0], variance[1], 1:3])) / 2f)[1,1] from TestColl' --out string
